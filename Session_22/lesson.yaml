- Class: meta
  Course: CS112
  Lesson: Session 22 Synthetic Controls II
  Author: Michael Chen
  Type: Standard
  Organization: Minerva University
  Version: 2.4.5
  
- Class: text
  Output: Welcome to the Swirl lesson for CS112 Session 22, Synthetic Control II.
      Please note that you can use the function rpt() to go back to the
      previous question. To end your Swirl session, you can type bye().
      After you exit a lesson, you can always resume a lesson by typing 
      swirl() again. However, make sure you use the same name you always use!
      Hit any key to continue!

- Class: text
  Output: In this lesson, you will implement synthetic control on the Basque region data set. 
      For the context of the dataset, see https://economics.mit.edu/files/11870. 
      Mostly, we will be learning about the parameters in the dataprep function, which is
      absolutely essential in implementing the synthetic control method. 

- Class: text
  Output: Make sure you have the Synth package installed and loaded. 
  
- Class: cmd_question
  Output: The Basque country dataset is included in the Synth package. 
      This dataset is called 'basque'. Load the data into your environment.
  CorrectAnswer: data(basque)
  AnswerTests: any_of_exprs('data("basque")', 'data(basque)') 
  Hint: You need to use the data() function. No need to save it to an object.
  
- Class: exact_question
  Output: Take a look at the dataframe, what's the earliest year the data covers?
  CorrectAnswer: 1955
  AnswerTests: omnitest(correctVal = 1955)
  Hint: Look at the variable year.

- Class: exact_question
  Output: What's the latest year the data covers?
  CorrectAnswer: 1997
  AnswerTests: omnitest(correctVal = 1997)
  Hint: Look at the variable year.

- Class: text
  Output: For more context, the "exposure" or "treatment" (in this context, terrorist activity)
      is defined to begin at 1969. Thus, we are trying to make a synthetic control for the 
      period up to 1969. 

- Class: text
  Output: As we saw from the previous swirl lesson, the general procedures in 
      synthetic control are 1) data preparation, 2) synthetic control construction,
      and 3) producing results and graphs. 

- Class: text
  Output: Due to its complexity, we will try to understand some important parameters 
      the dataprep process. Refer to the help files as needed (?dataprep).

- Class: exact_question
  Output: There is a parameter called foo. What should you input there?
  CorrectAnswer: basque
  AnswerTests: omnitest(correctVal = "basque")
  Hint: foo specifies the dataframe with the data. 

- Class: mult_question
  Output: There is a parameter called predictors. What does it refer to?
  CorrectAnswer: The independent variables; The dependent variable
  AnswerTests: omnitest(correctVal = "The independent variables")
  Hint: 

- Class: exact_question
  Output: There is a parameter called unit.variable. It indicates the column that specifies
      the number that associates with the different units (different regions). 
      In the basque dataset, what is the column name that indicates this?
  CorrectAnswer: regionno
  AnswerTests: omnitest(correctVal = "regionno")
  Hint: regionname specifies the actual name of the different regions, 
      is there a column with numbers that correspond to these names?

- Class: exact_question
  Output: There is a parameter called time.variable. It indicates the column that 
      specifies the time variable. In the basque dataset, which variable is this?
  CorrectAnswer: year
  AnswerTests: omnitest(correctVal = "year")
  Hint: Take a look at the dataset. 

- Class: exact_question
  Output: There is a parameter called treatment.identifier. It indicates the column
      that specifies the treatment unit in the unit variable specified earlier.
      In the basque dataset, what is the number that indicates our treatment unit 
      (Basque Country)? 
  CorrectAnswer: 17
  AnswerTests: omnitest(correctVal = 17)
  Hint: Look for the regionno that correspond to Basque Country. 

- Class: text
  Output: There is a parameter called controls.identifier. It indicates the column 
      that specifies the control units that are used to construct the synthetic 
      control. We will use all the other regions in Spain as controls. Thus, we
      will use everything BUT Spain (which includes every region) and Basque Country
      (the treatment unit). 

  Class: text
  Output: To specify these control units, we will use c(2:16,18). This means we want 
      all the units with regionno from 2 to 16, and 18. This excludes 1 and 17, which
      refer to Spain and Basque Country respectively. 

- Class: exact_question
  Output: Another important parameter is called time.predictors.prior. It indicates the 
      pretreatment periods over which the values for the outcome predictors should be 
      averaged. In the basque dataset, what is the latest year of the pretreatment period? 
  CorrectAnswer: 1969
  AnswerTests: omnitest(correctVal = 1969)
  Hint: Recall when the treatment was defined earlier. 
  
- Class: figure
  Output: The dataprep step is automatically ran here. For the full code, refer to the 
      bottom of the help file of dataprep (?dataprep). The parameters above are inputted
      in the dataprep function. The output is called dataprep.out. Hit enter to continue.
  Figure: data_prep.R
  FigureType: new
  
- Class: cmd_question
  Output: Use the subject dataprep.out and the synth() function to identify the weights
      that create the best possible synthetic control unit for the treated and
      assign the result to an object called synth.out.
  CorrectAnswer: synth.out <- synth(dataprep.out)
  AnswerTests: omnitest(correctExpr='synth.out <- synth(dataprep.out)')
  Hint: 
  
- Class: cmd_question
  Output: Run synth.out$solution.w to check the weights you obtained.
  CorrectAnswer: synth.out$solution.w
  AnswerTests: omnitest(correctExpr='synth.out$solution.w')
  Hint: 
  
- Class: mult_question
  Output: Based on your results in the previous step, 
      which control unit has the highest weight?
  AnswerChoices: Cataluna; Madrid; Aragon; Canarias
  CorrectAnswer: Cataluna
  AnswerTests: omnitest(correctVal='Cataluna')
  Hint:

- Class: text
  Output: There are two graphs we can look at, the path plot and the gaps plot.
      You can run them below. 

- Class: figure
  Output: We can also look at the outcome trajectories of the treated and the 
      synthetic control unit using the path.plot() function. 
      The figure will be shown on the right. Hit enter to continue!
  Figure: path_plot.R
  FigureType: new

- Class: figure
  Output: We can also look at the difference between the treated and the 
      synthetic control unit using the gaps.plot() function. 
      The figure will be shown on the right. Hit enter to continue!
  Figure: gaps_plot.R
  FigureType: new

- Class: text
  Output: Once we are satisfied with our synthetic control, we can try to 
      estimate the treatment effect. We may be interested in the aggregate
      treatment effect or the average treatment effect. The former is the sum
      of the differences in the post-treatment period; the latter is the average 
      of the differences in the post-treatment period. 

- Class: cmd_question
  Output: We first calculate the difference between the treatment and the synthetic control.
      We do so with this, gaps <- dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w)
  CorrectAnswer: gaps <- dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w)
  AnswerTests: omnitest(correctExpr='gaps <- dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w)')
  Hint: 

- Class: cmd_question
  Output: To calculate the aggregate treatment effect, we sum up the gaps in the post-treatment
      period. The period starts in the 16th index and ends in the 43rd, sum(gaps[16:43]). 
  CorrectAnswer: sum(gaps[16:43])
  AnswerTests: omnitest(correctExpr='sum(gaps[16:43])')
  Hint: 

- Class: cmd_question
  Output: To calculate the average treatment effect, we average the gaps in the post-treatment
      period. The period starts in the 16th index and ends in the 43rd, mean(gaps[16:43]). 
  CorrectAnswer: mean(gaps[16:43])
  AnswerTests: omnitest(correctExpr='mean(gaps[16:43])')
  Hint: 

- Class: text
  Output: Good job. If you are interested in running synthetic control for your
      final project. Please reach out to Profs and TAs for more help, as 
      implementation was the primary focus of the sessions. 

- Class: mult_question
  Output: "Would you like the code-generator to generate a code for you?"
  AnswerChoices: Yes;No
  CorrectAnswer: NULL
  AnswerTests: cs112_credit(941, "22")
  Hint:

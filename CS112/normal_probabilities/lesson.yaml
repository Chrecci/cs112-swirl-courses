- Class: meta
  Course: Normal probabilities  
  Lesson: Probabilities of Normally distributed random variables 
  Author: Garrett M. Dancik
  Type: Standard
  Organization: Eastern Connecticut State University
  Version: 1.0 
  
- Class: text
  Output: The questions that follow cover the normal distribution.   
 
- Class: multi_cmd_question
  NumTimes: 2
  Token: mu = sample(20:100,1); sigma = sample(2:5,1); val = round(mu+sigma*runif(1,.2,3))   
  Output: Suppose that X ~ N(<mu>,<sigma>). Find P(X < <val>), store your answer in the variable 'P', and type submit() when you are finished. 
  CorrectAnswer: P <- pnorm(<val>,<mu>,<sigma>)
  AnswerTests: var_has_value('P', pnorm(<val>,<mu>,<sigma>), 1e-10)
  HintFunction: calcNormProbHintLT("Find P(X < <val>).")  

- Class: multi_cmd_question
  Output: Suppose again that X ~ N(<mu>,<sigma>). Find P(X > <val>), store your answer in the variable 'P', and type submit() when you are finished. 
  CorrectAnswer: P <- 1-pnorm(<val>,<mu>,<sigma>)
  AnswerTests: var_has_value('P', 1-pnorm(<val>,<mu>,<sigma>), 1e-10)
  HintFunction: calcNormProbHintGT("Find P(X > <val>).") 

- Class: multi_cmd_question
  Token: mu = 0; sigma = 1; val = round(rnorm(1),2)
  Output: What is the probability that an observation from the standard normal distribution is greater than <val>? Store your answer in the variable 'P', and type submit() when you are finished. 
  CorrectAnswer: P <- 1-pnorm(<val>)
  AnswerTests: var_has_value('P', 1-pnorm(<val>), 1e-10)
  Hint: Remember the standard normal distribution has mean 0 and standard deviation 1.
  HintFunction: calcNormProbHintGT("Find P(X > <val>).") 

- Class: multi_cmd_question
  Token: num.sd = runif(1,1,3); num.sd = round(num.sd, 1); mu = 0; sd = 1; val=-num.sd
  Output: In a population that is normally distributed, calculate the probability that a randomly selected observation is more than <num.sd> standard deviations below the mean. Store your answer in the variable 'P', and type submit() when you are finished. 
  CorrectAnswer: P = (1 - pnorm(<num.sd>))
  AnswerTests: var_has_value('P', (1 - pnorm(<num.sd>)), 1e-10)
  Hint: A normally distributed random variable X is Z = (X-mu)/sigma standard deviations from the mean, where Z ~ N(0,1). Note also that more than <num.sd> standard deviations below the mean implies that Z < -<num.sd>
  HintFunction: calcNormProbHintLT("Find P(X < <num.sd>).") 

- Class: multi_cmd_question
  NumTimes: 1
  Token: num.sd = runif(1,1,3); num.sd = round(num.sd, 1); mu = 0; sd = 1; val=num.sd
  Output: In a population that is normally distributed, calculate the probability that a randomly selected observation is more than <num.sd> standard deviations from the mean. Store your answer in the variable 'P', and type submit() when you are finished. 
  CorrectAnswer: P = 2*(1 - pnorm(<num.sd>))
  AnswerTests: var_has_value('P', 2*(1 - pnorm(<num.sd>)), 1e-10)
  Hint: A normally distributed random variable X is Z = (X-mu)/sigma standard deviations from the mean, where Z ~ N(0,1). Note also that more than <num.sd> standard deviations from the mean is either more than <num.sd> sds above the mean or more than <num.sd> below the mean.

- Class: cmd_question
  Token: mu = sample(20:100,1); sigma = sample(2:5,1); n = sample(seq(10,100,by=10), 1)  
  Output: Suppose that X ~ N(<mu>,<sigma>). In a sample of size <n>, what is the expected value of the sample mean? Type this value and hit enter. 
  CorrectAnswer: <mu>
  AnswerTests: omnitest(correctExpr='<mu>')
  Hint: Remember, the expected value of the sample mean is the same as the population mean.

- Class: cmd_question
  Output: Suppose again that X ~ N(<mu>,<sigma>). In a sample of size <n>, what is the standard deviation of the sample mean? Type the calculation of this value and press enter. 
  CorrectAnswer: <sigma> / sqrt(<n>)
  AnswerTests: omnitest(correctExpr='<sigma>/sqrt(<n>)')
  Hint: Remember, the standard deviation of the sample mean is the same as the population standard deviation divided by the square root of the sample size.

- Class: multi_cmd_question
  Token: val = round(mu+sigma/sqrt(n)*runif(1,.2,3))   
  Output: Suppose again that X ~ N(<mu>,<sigma>) and that <n> individuals are sampled. Find the probability that the sample mean is at least <val>, store your answer in the variable 'P', and type submit() when you are finished. 
  CorrectAnswer: P <- 1-pnorm(<val>,<mu>,<sigma>/sqrt(<n>))
  AnswerTests: var_has_value('P', 1-pnorm(<val>,<mu>,<sigma>/sqrt(<n>)), 1e-10)
  Hint: Remember, the expected value of the sample mean is the same as the population mean, while its standard deviation is the population standard deviation divided by the square root of the sample size. Find the probability that the sample mean is at least <val>, when the sample size is <n>.

- Class: multi_cmd_question
  Token: mu = sample(20:100,1); sigma = sample(2:5,1); n = sample(seq(10,100,by=10), 1); val1 = round(mu+sigma/sqrt(n)*runif(1,-3,2),1); val2 = val1 + round(sigma/sqrt(n) * runif(1,.5,3),1) 
  Output: Suppose that X ~ N(<mu>,<sigma>) and that <n> individuals are sampled. Find the probability that the sample mean is between <val1> and <val2>, store your answer in the variable 'P', and type submit() when you are finished. 
  CorrectAnswer: P <- pnorm(<val2>,<mu>,<sigma>/sqrt(<n>)) -  pnorm(<val1>,<mu>,<sigma>/sqrt(<n>))
  AnswerTests: var_has_value('P', pnorm(<val2>,<mu>,<sigma>/sqrt(<n>)) - pnorm(<val1>,<mu>,<sigma>/sqrt(<n>)), 1e-10)
  Hint: Remember, the expected value of the sample mean is the same as the population mean, while its standard deviation is the population standard deviation divided by the square root of the sample size. Find the probability that the sample mean is between <val1> and <val2>, when the sample size is <n>.

